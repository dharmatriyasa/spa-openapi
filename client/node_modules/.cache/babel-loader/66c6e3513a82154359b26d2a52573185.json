{"ast":null,"code":"var _jsxFileName = \"/mnt/d/UGM/Semester 7/Kuliah/Binar Academy/Level Gold/Chapter 8/Challenges/repo-challenges/suwit-dashboard/client/src/pages/MainPage/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport LevelCard from '../../components/LevelCard';\nimport Navbar from '../../components/Navbar';\nimport RoomCard from '../../components/RoomCard';\nimport Footer from '../../components/Footer';\nimport css from './styles.module.css';\nimport opponents from '../../data/opponents.json';\nimport user from '../../data/user.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LOCAL_STORAGE_KEY = \"isLoggedIn\";\n\nconst MainPage = () => {\n  _s();\n\n  const levels = [\"NOVICE\", \"CLASS A\", \"CLASS B\", \"CLASS C\", \"CLASS D\", \"CANDIDATE MASTER\", \"GRAND MASTER\"];\n  const levelsCard = levels.map((level, i) => {\n    return /*#__PURE__*/_jsxDEV(LevelCard, {\n      changeLevelRooms: () => setFilterRooms(level),\n      name: level\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this);\n  });\n  const [levelActive, setLevelActive] = useState([levelsCard]);\n\n  const changeActiveLevel = level => {};\n\n  const filteringRooms = levelRoom => {\n    const filteredRooms = opponents.filter(opponent => opponent.level === levelRoom);\n    const arrayFilteredRooms = [];\n    filteredRooms.forEach(filteredRoom => {\n      arrayFilteredRooms.push( /*#__PURE__*/_jsxDEV(RoomCard, {\n        name: filteredRoom.name,\n        bio: filteredRoom.bio,\n        avatar: filteredRoom.avatar,\n        level: filteredRoom.level,\n        createdAt: filteredRoom.createdAt\n      }, filteredRoom.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 37\n      }, this));\n    });\n    return arrayFilteredRooms;\n  };\n\n  console.log(filteringRooms(\"GRAND MASTER\"));\n  const [listRoom, setListRoom] = useState([filteringRooms(\"GRAND MASTER\")]);\n\n  const setFilterRooms = levelRoom => {\n    setListRoom(filteringRooms(levelRoom));\n  }; // const [activeLevel, setActiveLevel] = useState(false);\n\n\n  let isLogin = false;\n  const loginState = localStorage.getItem(LOCAL_STORAGE_KEY);\n  const isLoggedIn = JSON.parse(loginState || \"false\");\n\n  if (isLoggedIn) {\n    isLogin = true;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: ` ${css.gameBackground} flex flex-col pb-10`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Navbar, {\n        name: user.name,\n        isLogin: isLogin\n      }, \"navbar\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${css.fullScreen} `,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `pt-20 px-8 md:px-44`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"py-4\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl text-white font-bold\",\n            children: \"CHOOSE YOUR OPPONENT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `grid grid-cols-3 gap-4 md:flex md:flex-row md:px-0 py-2`,\n          children: levelsCard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-4 gap-2 pt-10 px-8 md:px-44\",\n        children: listRoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-44\",\n      children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MainPage, \"rqmaMHjJTtoWgTcZ4MfowqvhgoY=\");\n\n_c = MainPage;\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["/mnt/d/UGM/Semester 7/Kuliah/Binar Academy/Level Gold/Chapter 8/Challenges/repo-challenges/suwit-dashboard/client/src/pages/MainPage/index.jsx"],"names":["useState","LevelCard","Navbar","RoomCard","Footer","css","opponents","user","LOCAL_STORAGE_KEY","MainPage","levels","levelsCard","map","level","i","setFilterRooms","levelActive","setLevelActive","changeActiveLevel","filteringRooms","levelRoom","filteredRooms","filter","opponent","arrayFilteredRooms","forEach","filteredRoom","push","name","bio","avatar","createdAt","id","console","log","listRoom","setListRoom","isLogin","loginState","localStorage","getItem","isLoggedIn","JSON","parse","gameBackground","fullScreen"],"mappings":"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","sourcesContent":["\nimport { useState } from 'react';\nimport LevelCard from '../../components/LevelCard';\nimport Navbar from '../../components/Navbar';\nimport RoomCard from '../../components/RoomCard';\nimport Footer from '../../components/Footer';\nimport css from './styles.module.css';\n\nimport opponents from '../../data/opponents.json';\nimport user from '../../data/user.json';\n\nconst LOCAL_STORAGE_KEY = \"isLoggedIn\";\n\nconst MainPage = () => {\n    const levels = [\n        \"NOVICE\",\n        \"CLASS A\",\n        \"CLASS B\",\n        \"CLASS C\",\n        \"CLASS D\",\n        \"CANDIDATE MASTER\",\n        \"GRAND MASTER\",\n    ]\n\n    const levelsCard = levels.map((level, i) => {\n        return <LevelCard key={i} changeLevelRooms={() => setFilterRooms(level)} name={level} />\n    });\n\n    const [levelActive,setLevelActive] = useState([levelsCard]);\n\n    const changeActiveLevel = (level) => {\n        \n    }\n\n\n    const filteringRooms = (levelRoom) => {\n        const filteredRooms = opponents.filter((opponent) => opponent.level === levelRoom);\n\n        const arrayFilteredRooms = [];\n\n        filteredRooms.forEach((filteredRoom) => {\n            arrayFilteredRooms.push(<RoomCard key={filteredRoom.id} name={filteredRoom.name} bio={filteredRoom.bio} avatar={filteredRoom.avatar} level={filteredRoom.level} createdAt={filteredRoom.createdAt} />)\n        });\n        return arrayFilteredRooms;\n    }\n\n\n    console.log(filteringRooms(\"GRAND MASTER\"));\n    const [listRoom, setListRoom] = useState([filteringRooms(\"GRAND MASTER\")]);\n\n    const setFilterRooms = (levelRoom) => {\n        setListRoom(filteringRooms(levelRoom));\n    }\n\n    // const [activeLevel, setActiveLevel] = useState(false);\n    let isLogin = false;\n    const loginState = localStorage.getItem(LOCAL_STORAGE_KEY);\n    const isLoggedIn = JSON.parse(loginState || \"false\");\n\n    if(isLoggedIn){\n        isLogin = true;\n    }\n\n    return (\n        <div className={` ${css.gameBackground} flex flex-col pb-10`}>\n            <div>\n                <Navbar name={user.name} isLogin={isLogin} key=\"navbar\"/>\n            </div>\n            <div className={`${css.fullScreen} `}>\n                <div className={`pt-20 px-8 md:px-44`}>\n                    <div className=\"py-4\">\n                        <h1 className=\"text-2xl text-white font-bold\">CHOOSE YOUR OPPONENT</h1>\n                    </div>\n                    <div className={`grid grid-cols-3 gap-4 md:flex md:flex-row md:px-0 py-2`}>\n                        {levelsCard}\n                    </div>\n                </div>\n                <div className=\"grid grid-cols-1 md:grid-cols-4 gap-2 pt-10 px-8 md:px-44\">\n                    {/* <RoomCard name={opponents[0].name} bio={opponents[0].bio} avatar={opponents[0].avatar} level={opponents[0].level} createdAt={opponents[0].createdAt} /> */}\n                    {listRoom}\n                </div>\n            </div>\n            <div className=\"px-44\">\n                <Footer />\n            </div>\n        </div>\n    );\n}\n \nexport default MainPage;"]},"metadata":{},"sourceType":"module"}